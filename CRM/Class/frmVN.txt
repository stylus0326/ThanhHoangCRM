using DataAccessLayer;
using DataTransferObject;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Support.UI;
using System;
using System.Collections.Generic;
using System.Data;
using System.Globalization;
using System.Linq;
using System.Threading;

namespace CRM
{
    public partial class frmVN : DevExpress.XtraEditors.XtraForm
    {
        TuyenBayD Tb = new TuyenBayD();
        SanBayD Sb = new SanBayD();
        WebDriverWait wait;
        ChromeDriver chromeDriver;
        IJavaScriptExecutor js;
        NCCO _NCCO = new NCCO();
        GiaoDichD gd = new GiaoDichD();
        DaiLyD dlD = new DaiLyD();
        List<SignInO> lstSignIn = new List<SignInO>();
        List<DaiLyO> lstDaiLy = new List<DaiLyO>();
        List<string> lstStr = new List<string>(new string[] { "MR", "MRS", "MS", "MISS", "MSTR" });
        bool All = false;
        public frmVN(bool all)
        {
            InitializeComponent();
            All = all;
        }

        private void frmVN_Load(object sender, EventArgs e)
        {
            foreach (var process in System.Diagnostics.Process.GetProcessesByName("chromedriver"))
            { process.Kill(); }
            foreach (var process in System.Diagnostics.Process.GetProcessesByName("chrome"))
            { process.Kill(); }
            lstSignIn = new SignInD().DuLieu();
            lstDaiLy = dlD.All();

            var options = new ChromeOptions();
            var chromeDriverService = ChromeDriverService.CreateDefaultService();
            chromeDriverService.HideCommandPromptWindow = true;
            try
            {
                chromeDriver = new ChromeDriver(chromeDriverService, options, TimeSpan.FromSeconds(10000));
            }
            catch
            {
                options.BinaryLocation = @"C:\Program Files\Google\Chrome\Application\chrome.exe";
                chromeDriver = new ChromeDriver(chromeDriverService, options, TimeSpan.FromSeconds(10000));
            }
            js = chromeDriver as IJavaScriptExecutor;
            wait = new WebDriverWait(chromeDriver, TimeSpan.FromMinutes(5));
            _NCCO = new NCCD().DuLieu().Where(w => w.ID.Equals(2)).ToList()[0];
            LoadVe();
        }

        void LoadVe()
        {
            chromeDriver.Navigate().GoToUrl("https://agency.Vietnamairlines.com/SSW2010/VNAG/agency.html");
            wait.Until(driver => !driver.PageSource.Contains("progressContainer"));
            chromeDriver.FindElement(By.Id("username")).SendKeys(_NCCO.TaiKhoan);
            chromeDriver.FindElement(By.Id("password")).SendKeys(_NCCO.MatKhau);
            Thread.Sleep(500);
            chromeDriver.FindElement(By.Id("btn-login")).Click();
            wait.Until(driver => !driver.PageSource.Contains("progressContainer"));
            //balanceDd
            long a = long.Parse(new String(chromeDriver.FindElement(By.Id("balanceDd")).Text.Where(Char.IsDigit).ToArray()));

            js.ExecuteScript(string.Format(@"var ID4 = document.getElementById('loginComponentTraveBankViewDetailsLink');ID4.click();"));

            wait.Until(driver => driver.WindowHandles.Count() == 2);
            chromeDriver.SwitchTo().Window(chromeDriver.WindowHandles[1]);
            wait.Until(driver => driver.PageSource.Contains("transactionsHistory.html"));
            int M = DateTime.Now.Month;
            int Y = DateTime.Now.Year;
            int D = DateTime.Now.Day;
            DateTime intD = DateTime.Now;
            string URLS = string.Empty;
            if (!All)
                intD = DateTime.Now.AddDays(-1);
            else
                switch (D)
                {
                    case 1:
                    case 2:
                        if (DateTime.Now.AddDays(-1).Year < Y)
                        {
                            Y -= 1;
                            M = 13;
                        }
                        intD = new DateTime(Y, M - 1, 24);
                        break;
                    case 3:
                    case 4:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                        intD = new DateTime(Y, M, 1);
                        break;
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                        intD = new DateTime(Y, M, 7);
                        break;
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                        intD = new DateTime(Y, M, 15);
                        break;
                    default:
                        intD = new DateTime(Y, M, 23);
                        break;
                }

            List<string> LuuDuLieuVe1ban = new List<string>();
            System.Threading.Thread.CurrentThread.CurrentCulture = new System.Globalization.CultureInfo("en-US");
            for (DateTime i = DateTime.Now; intD.Date.Subtract(i.Date).Days < 1; i = i.AddDays(-1))
            {
                URLS = "https://agencymanagement.havail.sabre.com/ctva/user/agency/rest/monthly-statement/" + i.ToString("ddMMMyyyy") + "/";
                URLS += i.ToString("ddMMMyyyy") + "/details.json?sEcho=3&iDisplayStart=0&iDisplayLength=5000";
                chromeDriver.Navigate().GoToUrl(URLS);

                string innerText = string.Empty;
                innerText = chromeDriver.FindElement(By.TagName("body")).Text.Replace("\"", string.Empty).Replace("</a>", string.Empty);
                innerText = innerText.Replace(@")\>", ",");
                innerText = innerText.Replace(@"[738,<a href=\javascript:;\ onclick=\", string.Empty);
                innerText = innerText.Replace(@"submit_link(", "|");
                List<string> ListinnerText = innerText.Split('|').ToList();
                ListinnerText.RemoveAt(0);
                LuuDuLieuVe1ban.AddRange(ListinnerText.AsEnumerable().Reverse());
            }



            List<string> LuuSoVeThuongVoid = new List<string>();
            List<string> LuuSoVeHoanVoid = new List<string>();
            List<string> SoVeThuong = new List<string>();
            List<string> SoVeHoan = new List<string>();
            List<string> SoVeThuongVoid = new List<string>();
            List<string> SoVeHoanVoid = new List<string>();
            foreach (string za in LuuDuLieuVe1ban)//lấy từ dưới lên trên từ ngày gần nhất đến ngày xa nhất
            {
                string[] G = za.Split(',');

                if ((G[4] ?? string.Empty).Contains("VOID"))//số vé sau cùng là 1 giao dịch khác không phải void hay hoặc đã ref rồi
                {
                    if (G[4].Contains("REF"))
                    {
                        LuuSoVeHoanVoid.Add(G[4] + "," + "738" + G[1]);
                        SoVeHoanVoid.Add(za);
                    }
                    else
                    {
                        LuuSoVeThuongVoid.Add(G[4] + "," + "738" + G[1]);
                        SoVeThuongVoid.Add(za);
                    }
                }
                else
                {
                    if (G[4].Contains("REF"))
                    {
                        if (LuuSoVeHoanVoid.Where(w => w.Contains(G[4]) && w.Contains("738" + G[1])).Count() < 1)
                            SoVeHoan.Add(za);
                    }
                    else if (LuuSoVeThuongVoid.Where(w => w.Contains(G[4]) && w.Contains("738" + G[1])).Count() < 1)
                    {
                        SoVeThuong.Add(za);
                    }
                }
            }


            #region Xóa void
            List<GiaoDichO> lstVoid = gd.LayVeThuong(SoVeThuongVoid, 4);
            lstVoid.AddRange(gd.LayVeThuong(SoVeThuongVoid, 9));

            string CauTruyVan = String.Join(",", lstVoid.Select(w => w.ID).ToArray());

            if (gd.Xoa(CauTruyVan, "WHERE ID IN ({0})") > 0)
            {
                string NoiDung = string.Format("{0}: {1}", "Xóa void", String.Join(",", lstVoid.Select(w => w.SoVeVN).ToArray()));
                Dictionary<string, object> dic = new Dictionary<string, object>();
                dic.Add("FormName", "Hệ thống");
                dic.Add("MaCho", string.Empty);
                dic.Add("NoiDung", NoiDung);
                dic.Add("NVGiaoDich", DuLieuTaoSan.NV.ID);
                dic.Add("LoaiKhachHang", 0);
                dic.Add("Ma", 0);
                if (NoiDung.Length > 10)
                    new LichSuD().ThemMoi(dic);
            }
            #endregion

            #region Vé Hoàn
            List<GiaoDichO> lstHoan = gd.LayVeThuong(SoVeHoan, 9);

            for (int i = 0; i < SoVeHoan.Count; i++)
            {
                if (lstHoan.Where(w => SoVeHoan[i].Split(',')[1].Equals(w.SoVeVN.Substring(3))).Count() > 0)
                {
                    SoVeHoan.Remove(SoVeHoan[i]);
                    i--;
                }
            }//xóa đã tồn tại

            if (SoVeHoan.Count > 0)
            {
                lstHoan = gd.LayVeThuong(SoVeHoan, 4);
                if (lstHoan.Count > 0)
                {
                    for (int i = 0; i < lstHoan.Count; i++)
                    {
                        string aZ = SoVeHoan.Where(w => w.Split(',')[1].Equals(lstHoan[i].SoVeVN.Substring(3))).ToList()[0];
                        if (aZ.Length > 0)
                        {
                            string[] G = aZ.Split(',');
                            lstHoan[i].NgayGD = DateTime.Now;
                            lstHoan[i].VeTuXuat = false;
                            lstHoan[i].TheoDoi = true;
                            lstHoan[i].TinhCongNo = false;
                            lstHoan[i].TenKhach += " /Hoàn vé";
                            lstHoan[i].GiaHoan = 0;
                            lstHoan[i].GiaNet = lstHoan[i].GiaHeThong = lstHoan[i].GiaThu = long.Parse(G[9]);
                            lstHoan[i].HangHoan = 0 - long.Parse(G[11]) + lstHoan[i].GiaNet;
                            lstHoan[i].PhiCK = lstHoan[i].HoaHong = lstHoan[i].Fare = 0;
                            lstHoan[i].LoaiGiaoDich = 9;
                            lstHoan[i].NVGiaoDich = lstHoan[i].NVHoTro = 0;
                            SoVeHoan.Remove(aZ);
                        }
                    }
                    gd.Them(lstHoan);
                }
            }
            #endregion

            #region Vé Thường
            List<GiaoDichO> lstThuong = gd.LayVeThuong(SoVeThuong, 4);

            for (int i = 0; i < SoVeThuong.Count; i++)
            {
                string[] asd = SoVeThuong[i].Split(',');
                if (lstThuong.Where(w => asd[1].Equals(w.SoVeVN.Substring(3))).Count() > 0 || asd[5].Equals("HANFJN") || (asd[4].Contains("EXC") && long.Parse(asd[11]) == 0))
                {
                    SoVeThuong.Remove(SoVeThuong[i]);
                    i--;
                }
            }//xóa đã tồn tại
            #endregion

            if (SoVeThuong.Count > 0)
            {
                lstThuong = new List<GiaoDichO>();
                for (int i = 0; i < SoVeThuong.Count; i++)
                {
                    GiaoDichO giaoDichO = new GiaoDichO();
                    string[] Liststr = SoVeThuong[i].Split(',');
                    giaoDichO.SoVeVN = "738" + Liststr[1];


                    giaoDichO.LoaiKhachHang = 0;
                    giaoDichO.Agent = Liststr[5];
                    giaoDichO.HTTT = 0;
                    if (Liststr[4].Contains("EXC"))
                        giaoDichO.LoaiGiaoDich = 13;

                    List<int> vs1 = lstSignIn.Where(w => w.SignIn.Equals(giaoDichO.Agent)).Select(w => w.DaiLy).ToList();
                    if (vs1.Count > 0)
                    {
                        DaiLyO dl = lstDaiLy.First(w => w.ID.Equals(vs1[0]));
                        if (dl.LoaiKhachHang == 0)
                        {
                            giaoDichO.VeTuXuat = false;
                            giaoDichO.NVGiaoDich = dl.ID;
                        }
                        giaoDichO.IDKhachHang = dl.ID;
                        giaoDichO.HTTT = 1;
                        giaoDichO.LoaiKhachHang = dl.LoaiKhachHang;
                    }

                    giaoDichO.Hang = "VN";
                    DateTime[] dta = new DateTime[] { DateTime.ParseExact(Liststr[3], "MM/dd/yyyy", CultureInfo.InvariantCulture), DateTime.ParseExact(Liststr[2], "MM/dd/yyyy", CultureInfo.InvariantCulture) };

                    giaoDichO.NgayCuonChieu = giaoDichO.NgayGD = dta.Max();

                    string Str = "https://agencymanagement.havail.sabre.com/ctva/user/include/txnTKTDetails.html?txnId=" + Liststr[0].ToString().Replace("'", string.Empty) + "&txnType=TRANS_TYPE_TKT";
                    try
                    {
                        chromeDriver.Navigate().GoToUrl(Str);
                    }
                    catch { chromeDriver.Navigate().GoToUrl(Str); }

                    List<string> lstStrTicket = chromeDriver.FindElement(By.TagName("body")).Text.Replace("\r\n", "|").Split('|').ToList();

                    bool HanhTrinhDi = false;
                    bool HanhTrinhVe = false;
                    for (int y = 0; y < lstStrTicket.Count(); y++)
                    {
                        string[] TTVe = lstStrTicket[y].Split(' ');
                        switch (TTVe[0])
                        {
                            case "Document":
                                giaoDichO.GiaThu = giaoDichO.GiaNet = giaoDichO.GiaHeThong = long.Parse(TTVe.Last());
                                break;
                            case "PNR":
                                giaoDichO.MaCho = TTVe[1];
                                break;
                            case "Tour":
                                giaoDichO.Fare = long.Parse(TTVe.Last());
                                break;
                            case "Transaction":
                                HanhTrinhDi = true;
                                break;
                            case "Miscellaneous":
                                y += 3;
                                break;
                            default:
                                if (HanhTrinhVe)
                                {
                                    DateTime NgayBay = DateTime.ParseExact(TTVe[0], "MM/dd/yyyy", CultureInfo.InvariantCulture);
                                    giaoDichO.SoLuongVe = 2;
                                    giaoDichO.GioBayVe = giaoDichO.GioBayVe_Den = NgayBay;
                                    giaoDichO.SoHieuVe = TTVe[1] + TTVe[2];
                                    giaoDichO.LoaiVeVe = TTVe[6];
                                    giaoDichO.TuyenBayVe = Tb.TuyenBay(Sb.SanBay(TTVe[3]).ID, Sb.SanBay(TTVe[4]).ID).ID;
                                    if (giaoDichO.TuyenBayVe == 0)
                                        giaoDichO.GhiChu += "|" + TTVe[3] + "-" + TTVe[4];
                                }
                                else if (HanhTrinhDi)
                                {
                                    DateTime NgayBay = DateTime.Now;
                                    try
                                    {
                                        NgayBay = DateTime.ParseExact(TTVe[0], "MM/dd/yyyy", CultureInfo.InvariantCulture);
                                    }
                                    catch { }

                                    giaoDichO.SoLuongVe = 1;
                                    giaoDichO.GioBayDi = giaoDichO.GioBayDi_Den = NgayBay;
                                    giaoDichO.SoHieuDi = TTVe[1] + TTVe[2];
                                    giaoDichO.LoaiVeDi = TTVe[6];

                                    if (lstStr.Contains(TTVe[TTVe.Length - 2]))
                                        giaoDichO.BiDanh = TTVe[TTVe.Length - 2];
                                    else
                                        giaoDichO.BiDanh = "-";

                                    giaoDichO.TuyenBayDi = Tb.TuyenBay(Sb.SanBay(TTVe[3]).ID, Sb.SanBay(TTVe[4]).ID).ID;
                                    if (giaoDichO.TuyenBayDi == 0)
                                        giaoDichO.GhiChu = TTVe[3] + "-" + TTVe[4];
                                    for (int u = 7; u < TTVe.Length; u++)
                                    {
                                        giaoDichO.TenKhach += TTVe[u] + " ";
                                    }
                                    if (giaoDichO.TenKhach != null)
                                    {
                                        giaoDichO.TenKhach = giaoDichO.TenKhach.Replace(giaoDichO.BiDanh, string.Empty);
                                        if (Liststr[4].Contains("EMD"))
                                        {
                                            giaoDichO.TenKhach += "-HL";
                                            giaoDichO.LoaiGiaoDich = 14;
                                        }
                                    }
                                    else
                                        giaoDichO.TenKhach = "-VC";
                                    giaoDichO.PhiCK = 0;
                                    HanhTrinhVe = true;
                                }
                                break;
                        }
                    }

                    giaoDichO.NhaCungCap = 2;
                    lstThuong.Add(giaoDichO);
                    if (lstThuong.Count > 5)
                    {
                        gd.Them(lstThuong);
                        lstThuong.Clear();
                    }
                }
            }

            if (SoVeHoan.Count > 0)
            {
                lstThuong = new List<GiaoDichO>();
                for (int i = 0; i < SoVeHoan.Count; i++)
                {
                    GiaoDichO giaoDichO = new GiaoDichO();
                    string[] Liststr = SoVeHoan[i].Split(',');
                    giaoDichO.SoVeVN = "738" + Liststr[1];
                    giaoDichO.GiaNet = giaoDichO.GiaHeThong = long.Parse(Liststr[9]);
                    giaoDichO.HangHoan = 0 - long.Parse(Liststr[11]) + giaoDichO.GiaNet;
                    giaoDichO.Agent = Liststr[5];
                    giaoDichO.HTTT = 0;
                    giaoDichO.LoaiGiaoDich = 9;


                    List<int> vs1 = lstSignIn.Where(w => w.SignIn.Equals(giaoDichO.Agent)).Select(w => w.DaiLy).ToList();
                    if (vs1.Count > 0)
                    {
                        DaiLyO dl = lstDaiLy.First(w => w.ID.Equals(vs1[0]));
                        if (dl.LoaiKhachHang == 0)
                        {
                            giaoDichO.VeTuXuat = false;
                            giaoDichO.NVGiaoDich = dl.ID;
                        }
                        giaoDichO.IDKhachHang = dl.ID;
                        giaoDichO.HTTT = 1;
                        giaoDichO.LoaiKhachHang = dl.LoaiKhachHang;
                    }

                    giaoDichO.TinhCongNo = false;
                    giaoDichO.Hang = "VN";
                    DateTime[] dta = new DateTime[] { DateTime.ParseExact(Liststr[3], "MM/dd/yyyy", CultureInfo.InvariantCulture), DateTime.ParseExact(Liststr[2], "MM/dd/yyyy", CultureInfo.InvariantCulture) };

                    giaoDichO.NgayCuonChieu = giaoDichO.NgayGD = dta.Max();

                    string Str = "https://agencymanagement.havail.sabre.com/ctva/user/include/txnTKTDetails.html?txnId=" + Liststr[0].ToString().Replace("'", string.Empty) + "&txnType=TRANS_TYPE_TKT";
                    try
                    {
                        chromeDriver.Navigate().GoToUrl(Str);
                    }
                    catch { chromeDriver.Navigate().GoToUrl(Str); }

                    List<string> lstStrTicket = chromeDriver.FindElement(By.TagName("body")).Text.Replace("\r\n", "|").Split('|').ToList();

                    bool HanhTrinhDi = false;
                    bool HanhTrinhVe = false;
                    for (int y = 0; y < lstStrTicket.Count(); y++)
                    {
                        string[] TTVe = lstStrTicket[y].Split(' ');
                        switch (TTVe[0])
                        {
                            case "PNR":
                                giaoDichO.MaCho = TTVe[1];
                                break;
                            case "Tour":
                                giaoDichO.Fare = long.Parse(TTVe.Last());
                                break;
                            case "Transaction":
                                HanhTrinhDi = true;
                                break;
                            case "Miscellaneous":
                                y += 3;
                                break;
                            default:
                                if (HanhTrinhVe)
                                {
                                    DateTime NgayBay = DateTime.ParseExact(TTVe[0], "MM/dd/yyyy", CultureInfo.InvariantCulture);
                                    giaoDichO.SoLuongVe = 2;
                                    giaoDichO.GioBayVe = giaoDichO.GioBayVe_Den = NgayBay;
                                    giaoDichO.SoHieuVe = TTVe[1] + TTVe[2];
                                    giaoDichO.LoaiVeVe = TTVe[6];
                                    giaoDichO.TuyenBayVe = Tb.TuyenBay(Sb.SanBay(TTVe[3]).ID, Sb.SanBay(TTVe[4]).ID).ID;
                                    if (giaoDichO.TuyenBayVe == 0)
                                        giaoDichO.GhiChu += "|" + TTVe[3] + "-" + TTVe[4];
                                }
                                else if (HanhTrinhDi)
                                {
                                    DateTime NgayBay = DateTime.Now;
                                    try
                                    {
                                        NgayBay = DateTime.ParseExact(TTVe[0], "MM/dd/yyyy", CultureInfo.InvariantCulture);
                                    }
                                    catch { }

                                    giaoDichO.SoLuongVe = 1;
                                    giaoDichO.GioBayDi = giaoDichO.GioBayDi_Den = NgayBay;
                                    giaoDichO.SoHieuDi = TTVe[1] + TTVe[2];
                                    giaoDichO.LoaiVeDi = TTVe[6];

                                    if (lstStr.Contains(TTVe[TTVe.Length - 2]))
                                        giaoDichO.BiDanh = TTVe[TTVe.Length - 2];
                                    else
                                        giaoDichO.BiDanh = "-";

                                    giaoDichO.TuyenBayDi = Tb.TuyenBay(Sb.SanBay(TTVe[3]).ID, Sb.SanBay(TTVe[4]).ID).ID;
                                    if (giaoDichO.TuyenBayDi == 0)
                                        giaoDichO.GhiChu = TTVe[3] + "-" + TTVe[4];
                                    for (int u = 7; u < TTVe.Length; u++)
                                    {
                                        giaoDichO.TenKhach += TTVe[u] + " ";
                                    }
                                    if (giaoDichO.TenKhach != null)
                                    {
                                        giaoDichO.TenKhach = giaoDichO.TenKhach.Replace(giaoDichO.BiDanh, string.Empty);
                                        if (Liststr[4].Contains("EMD"))
                                            giaoDichO.TenKhach += "-HL";
                                    }
                                    else
                                        giaoDichO.TenKhach = "-VC";
                                    giaoDichO.PhiCK = 0;
                                    HanhTrinhVe = true;
                                }
                                break;
                        }
                    }

                    giaoDichO.VeTuXuat = false;
                    giaoDichO.TheoDoi = true;
                    giaoDichO.TinhCongNo = false;
                    giaoDichO.TenKhach += " /Hoàn vé";
                    giaoDichO.GiaHoan = 0;
                    giaoDichO.PhiCK = giaoDichO.HoaHong = giaoDichO.Fare = 0;
                    giaoDichO.NVGiaoDich = giaoDichO.NVHoTro = 0;

                    giaoDichO.NhaCungCap = 2;
                    lstThuong.Add(giaoDichO);
                    if (lstThuong.Count > 5 || lstThuong.Count == SoVeHoan.Count)
                    {
                        gd.Them(lstThuong);
                        lstThuong.Clear();
                    }
                }
                gd.Them(lstThuong);
            }

            if (All)
            {
                Dispose();
                chromeDriver.Close();
                chromeDriver.Quit();
            }
            else
            {

            }
        }
    }
}